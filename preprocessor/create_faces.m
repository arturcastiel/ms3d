function [inner_faces_adj,bound_faces_adj, bound_faces_flag, ...
 upstream_inner_neigh, downstream_inner_neigh, upstream_bound_neigh, ...
 bound_faces_area, inner_faces_area, bound_faces_normal_area, ...
 inner_faces_normal_area, bound_faces_centroid, inner_faces_centroid] ...
 = create_faces(elem_adj, coord, element_centroid, boundary_flag_ref)
%create_faces Creates the components the adjacencies components and the
%flags of the internal and boundary faces
% Note that flag face_adj has the not sorted face adjs;
[face_adj,face_element_adj] = create_unique_faces_adj(elem_adj);
[bound_faces_adj, upstream_bound_neigh, bound_faces_flag, inner_faces_adj, ...
 inner_faces_neigh ] = split_bond_inner_find_face_neigh ...
 (face_adj,face_element_adj,boundary_flag_ref);
upstream_inner_neigh = inner_faces_neigh(:,1);
downstream_inner_neigh = inner_faces_neigh(:,2);
[bound_faces_area] = calc_area_triang(coord(bound_faces_adj(:,1),:), ...
    coord(bound_faces_adj(:,2),:),coord(bound_faces_adj(:,3),:));
[inner_faces_area] = calc_area_triang(coord(inner_faces_adj(:,1),:), ...
    coord(inner_faces_adj(:,2),:),coord(inner_faces_adj(:,3),:));
[bound_faces_normal_area] = compute_normals(bound_faces_adj,coord) ...
                            .* bound_faces_area;
[inner_faces_normal_area] = compute_normals(inner_faces_adj,coord) ...
                            .*inner_faces_area;
[bound_faces_centroid] = findcentelem(coord,bound_faces_adj);
[inner_faces_centroid] = findcentelem(coord,inner_faces_adj);
[bound_faces_normal_area] = guide_normals_bound(upstream_bound_neigh, ...
   bound_faces_normal_area,bound_faces_centroid,element_centroid);
%[faces_normal_area]= guide_normals_bound_inner ...
%    (upstream, downstream, faces_normal_area, element_centroid)
[inner_faces_normal_area] = guide_normals_inner(upstream_inner_neigh, ...
   downstream_inner_neigh, inner_faces_normal_area,element_centroid);
end